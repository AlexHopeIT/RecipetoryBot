from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.future import select
from keyboards.inline import main_menu_keyboard
from db import SessionLocal, User


common_router = Router()


@common_router.message(Command('help'))
async def cmd_help(message: types.Message):
    await message.answer(
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é: üòâ\n\n"
        "üìú /random_recipe - –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç\n"
        "üîç /find_recipe - –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
        "ü•¶ /by_ingredients - –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –ø–æ –∏–º–µ—é—â–∏–º—Å—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º\n"
        "‚≠êÔ∏è /favorites - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–∏ –ª—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã\n"
        "üõí /shopping_list - —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫"
    )


@common_router.message(CommandStart)
async def cmd_start(message: types.Message, state: FSMContext):
    keyboard = await main_menu_keyboard(state)
    async with SessionLocal() as db:
        user_id = message.from_user.id
        result = await db.execute(select(User).where(User.id == user_id))
        user = result.scalars().first()

        if not user:
            new_user = User(
                user_id=user_id,
                username=message.from_user.username
            )
            db.add(new_user)
            await db.commit()
            await db.refresh(new_user)

    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!üëã\n'
        '–Ø - –†–µ—Ü–µ–ø—Ç–æ—Ä–∏–π, —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫! üßë‚Äçüç≥\n'
        '–ü–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é ',
        reply_markup=keyboard
    )
